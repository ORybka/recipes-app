{"version":3,"sources":["framework/element.js","framework/render.js","data/dataStore.js","data/theMealDBApi.js","data/randomRecipesData.js","components/RandomButton.js","components/LikeRecipe.js","components/RandomRecipe.js","data/recipesData.js","components/SearchByDish.js","components/Recipe.js","components/RecipeResults.js","components/ShowLikedRecipes.js","components/App.js","index.js"],"names":["createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","classList","split","filter","Boolean","add","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","renderApp","Component","Target","componentFunction","targetElement","innerHTML","dataStore","currentRecipe","randomRecipe","isDataLoading","recipeList","likedArr","recipesData","allowedRecipes","getRecipe","recipeName","getRandomURL","GetRandomRecipe","url","response","fetch","ok","Error","statusText","results","json","meals","strMeal","RenderRandomBtn","addLikedRecipe","recipe","push","RenderRandomRecipe","strCategory","strInstructions","keys","length","constructor","performSearch","SearchByDish","optionList","el","target","getCurrentRecipeData","renderRecipe","recipeData","RecipeResults","content","showLikedRecipesButton","showList","ShowLikedRecipes","map","querySelector","style","display","App","getElementById"],"mappings":"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","file":"src.6f378188.js","sourceRoot":"..\\src","sourcesContent":["/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else if (name.toLowerCase() === 'classname') {\n            // We want to treat both strings and arrays in a similar manner\n            const classList = typeof value === 'string' ? value.split(' ').filter(Boolean) : value;\n            element.classList.add(...classList);\n          } else {\n            element.setAttribute(\n              name,\n              /** @type {string} */\n              value,\n            );\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from './element';\n\nlet Component, Target;\n\nfunction renderApp(componentFunction = null, targetElement = null) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElement) Target = targetElement;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n}\n\nexport default renderApp;\n","const dataStore = {\n  currentRecipe: '',\n  randomRecipe: {},\n  isDataLoading: false,\n  error: null,\n  recipeList: {},\n  likedArr: [],\n};\n\nexport default dataStore;\n","const recipesData = {};\nconst allowedRecipes = ['Pizza Express Margherita', 'Mediterranean Pasta Salad', 'Banana Pancakes'];\nfunction getRecipe(recipeName) {\n  return `https://www.themealdb.com/api/json/v1/1/search.php?s=${recipeName}`;\n}\nfunction getRandomURL() {\n  return 'https://www.themealdb.com/api/json/v1/1/random.php';\n}\n\nexport { recipesData, allowedRecipes, getRecipe, getRandomURL };\n","import { getRandomURL } from './theMealDBApi';\nimport renderApp from '../framework/render';\n\nexport default async function GetRandomRecipe() {\n  const url = getRandomURL();\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  try {\n    window.dataStore.isDataLoading = false;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw Error(response.statusText);\n    } else {\n      const results = await response.json();\n      window.dataStore.randomRecipe = results.meals[0];\n      window.dataStore.recipeList[results.meals[0].strMeal] = results.meals;\n    }\n  } catch (e) {\n    window.dataStore.error = 'Some error ocurred...';\n  } finally {\n    renderApp();\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport GetRandomRecipe from '../data/randomRecipesData';\n\nexport default function RenderRandomBtn() {\n  return (\n    <>\n      <button id=\"random-recipe-btn\" onclick={GetRandomRecipe}>\n        Click to get a recipe\n      </button>\n    </>\n  );\n}\n","import renderApp from '../framework/render';\n\nexport default function addLikedRecipe(recipe) {\n  const { likedArr } = window.dataStore;\n  if (!likedArr.includes(recipe)) {\n    likedArr.push(recipe);\n  }\n  renderApp();\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport addLikedRecipe from './LikeRecipe';\n\nexport default function RenderRandomRecipe() {\n  const { randomRecipe } = window.dataStore;\n\n  const { strMeal, strCategory, strInstructions } = randomRecipe;\n  if (Object.keys(randomRecipe).length === 0 && randomRecipe.constructor === Object) {\n    return null;\n  } else {\n    return (\n      <>\n        <div>\n          Your meal today is {strMeal} from {strCategory} category.\n        </div>\n        <br />\n        <div>Please, follow the instructions to cook {strMeal}:</div>\n        <br />\n        <div>{strInstructions}</div>\n        <br />\n        <button id=\"like-random-btn\" onclick={e => addLikedRecipe(strMeal)}>\n          Click to like\n        </button>\n        <br />\n      </>\n    );\n  }\n}\n","import { getRecipe } from './theMealDBApi';\nimport renderApp from '../framework/render';\n\nexport default async function performSearch(recipeName) {\n  const url = getRecipe(recipeName);\n  window.dataStore.currentRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  try {\n    window.dataStore.isDataLoading = false;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw Error(response.statusText);\n    } else {\n      const results = await response.json();\n      window.dataStore.recipeList[recipeName] = results.meals;\n    }\n  } catch (e) {\n    window.dataStore.error = 'Some error ocurred...';\n  } finally {\n    renderApp();\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { allowedRecipes } from '../data/theMealDBApi';\nimport performSearch from '../data/recipesData';\n\nexport default function SearchByDish() {\n  const optionList = [];\n  allowedRecipes.forEach(el => optionList.push(<option value={el}></option>));\n\n  return (\n    <>\n      <input\n        type=\"search\"\n        id=\"search-recipe-input\"\n        list=\"recipe-list\"\n        placeholder=\"Choose recipe\"\n        onchange={e => performSearch(e.target.value)}\n        autocomplete=\"off\"\n      />\n      <datalist id=\"recipe-list\">{optionList}</datalist>\n      <br />\n      <br />\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework/element';\nimport addLikedRecipe from './LikeRecipe';\n\nfunction getCurrentRecipeData() {\n  const { currentRecipe, recipeList } = window.dataStore;\n  return recipeList[currentRecipe];\n}\n\nexport default function renderRecipe(recipe) {\n  const recipeData = getCurrentRecipeData();\n  const { currentRecipe } = window.dataStore;\n  const { strInstructions, strMeal } = recipeData[0];\n  if (!recipeData) return null;\n\n  return (\n    <div>\n      <h3>{currentRecipe}</h3>\n      <div>{strInstructions}</div>\n      <div>{recipe}</div>\n      <br />\n      <button id=\"like-recipe-btn\" onclick={e => addLikedRecipe(strMeal)}>\n        Click to like\n      </button>\n      <br />\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport renderRecipe from './Recipe';\n\nexport default function RecipeResults() {\n  const { currentRecipe, isDataLoading, error } = window.dataStore;\n  let content = null;\n  if (currentRecipe === '') {\n    content = 'Please, choose the recipe from the list or try your luck and get random one :)';\n  } else {\n    if (isDataLoading) {\n      content = 'Loading ...';\n    }\n\n    if (error !== null) {\n      content = error;\n    }\n\n    content = (\n      <>\n        <>{renderRecipe(currentRecipe)} </>\n      </>\n    );\n  }\n\n  return <p>{content}</p>;\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nfunction showLikedRecipesButton() {\n  return (\n    <>\n      <button id=\"show-btn\" onclick={showList}>\n        Click to see your favorite recipes\n      </button>\n      <>{ShowLikedRecipes()}</>\n    </>\n  );\n}\n\nfunction ShowLikedRecipes() {\n  const { likedArr } = window.dataStore;\n  return (\n    <>\n      <div id=\"liked-title\" style=\"display: none\">\n        <h3>List of your favorite recipes:</h3>\n      </div>\n      <div id=\"liked-list\" style=\"display: none\">\n        {likedArr.map(el => el + ', ')}\n      </div>\n    </>\n  );\n}\n\nfunction showList() {\n  const elemArr = [document.querySelector('#liked-title'), document.querySelector('#liked-list')];\n  elemArr.map(el => {\n    el.style.display === 'block' ? (el.style.display = 'none') : (el.style.display = 'block');\n  });\n}\n\nexport { showLikedRecipesButton, ShowLikedRecipes, showList };\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport RenderRandomBtn from './RandomButton';\nimport RenderRandomRecipe from './RandomRecipe';\nimport SearchByDish from './SearchByDish';\nimport RecipeResults from './RecipeResults';\nimport { showLikedRecipesButton } from './ShowLikedRecipes';\n\nexport default function App() {\n  return (\n    <>\n      <RenderRandomBtn />\n      <br />\n      <RenderRandomRecipe />\n      <br />\n      <SearchByDish />\n      <br />\n      <RecipeResults />\n      <br />\n      <>{showLikedRecipesButton()}</>\n    </>\n  );\n}\n","import renderApp from './framework/render';\nimport dataStore from './data/dataStore';\nimport App from './components/App';\n\nwindow.dataStore = dataStore;\n\nrenderApp(App, document.getElementById('app-root'));\n"]}