{"version":3,"sources":["framework/render.js","data/theMealDBApi.js","data/recipesData.js","data/randomRecipesData.js","data/dataStore.js","components/RandomButton.js","components/LikeButton.js","components/RandomRecipe.js","components/SearchByDish.js","components/Recipe.js","components/ShowLikedRecipes.js","components/RecipeResults.js","components/App.js","components/LikeRecipe.js","index.js"],"names":["Component","Target","renderApp","componentFunction","targetElementId","document","getElementById","innerHTML","recipesData","allowedRecipes","getRecipe","recipeName","getRandomURL","performSearch","url","window","dataStore","currentRecipe","error","isDataLoading","response","fetch","ok","Error","statusText","results","json","recipeList","meals","e","GetRandomRecipe","randomRecipe","strMeal","likedArr","RenderRandomBtn","addLikeButton","recipe","likedRecipe","RenderRandomRecipe","content","strCategory","strInstructions","Object","keys","length","constructor","SearchByDish","optionList","forEach","el","push","getCurrentRecipeData","renderRecipe","recipeData","showLikedRecipesButton","ShowLikedRecipes","showList","querySelector","map","style","display","RecipeResults","App","addLikedRecipe","includes"],"mappings":"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","file":"src.cf5aef53.js","sourceRoot":"..\\src","sourcesContent":["let Component, Target;\n\nexport default function renderApp(componentFunction, targetElementId) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElementId) Target = targetElementId;\n  document.getElementById(Target).innerHTML = `\n        ${Component()}\n    `;\n}\n","const recipesData = {};\nconst allowedRecipes = ['Pizza Express Margherita', 'Mediterranean Pasta Salad', 'Banana Pancakes'];\nfunction getRecipe(recipeName) {\n  return `https://www.themealdb.com/api/json/v1/1/search.php?s=${recipeName}`;\n}\nfunction getRandomURL() {\n  return 'https://www.themealdb.com/api/json/v1/1/random.php';\n}\n\nexport { recipesData, allowedRecipes, getRecipe, getRandomURL };\n","import { getRecipe } from './theMealDBApi';\n\nexport default async function performSearch(recipeName) {\n  const url = getRecipe(recipeName);\n  window.dataStore.currentRecipe = recipeName;\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  try {\n    window.dataStore.isDataLoading = false;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw Error(response.statusText);\n    } else {\n      const results = await response.json();\n      window.dataStore.recipeList[recipeName] = results.meals;\n    }\n  } catch (e) {\n    window.dataStore.error = 'Some error ocurred...';\n  } finally {\n    renderApp();\n  }\n}\n","import { getRandomURL } from './theMealDBApi';\n\nexport default async function GetRandomRecipe() {\n  const url = getRandomURL();\n  window.dataStore.error = null;\n  window.dataStore.isDataLoading = true;\n\n  try {\n    window.dataStore.isDataLoading = false;\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw Error(response.statusText);\n    } else {\n      const results = await response.json();\n      window.dataStore.randomRecipe = results.meals[0];\n      window.dataStore.recipeList[results.meals[0].strMeal] = results.meals;\n    }\n  } catch (e) {\n    window.dataStore.error = 'Some error ocurred...';\n  } finally {\n    renderApp();\n  }\n}\n","export default window.dataStore = {\n  currentRecipe: '',\n  randomRecipe: {},\n  isDataLoading: false,\n  error: null,\n  recipeList: {},\n  likedArr: [],\n};\n\n// export default dataStore;\n","export default function RenderRandomBtn() {\n  return `\n    <button id=\"random-recipe-btn\" onclick=\"window.GetRandomRecipe(); window.renderApp();\">Click to get a recipe</button>\n    <br>\n  `;\n}\n","export default function addLikeButton(recipe) {\n  const { currentRecipe, randomRecipe } = window.dataStore;\n  window.likedRecipe = recipe;\n\n  if (currentRecipe === recipe) {\n    return `\n    <button id=\"like-recipe-btn\" onclick=\"addLikedRecipe(likedRecipe); window.renderApp();\">Click to add this recipe<br>to your favorite</button>`;\n  } else if (randomRecipe.strMeal === recipe) {\n    return `\n    <button id=\"like-random-btn\" onclick=\"addLikedRecipe(likedRecipe); window.renderApp();\">Click to add this recipe<br>to your favorite</button>`;\n  }\n}\n","import addLikeButton from './LikeButton';\n\nexport default function RenderRandomRecipe() {\n  const { randomRecipe } = window.dataStore;\n  let content = '';\n\n  const { strMeal, strCategory, strInstructions } = randomRecipe;\n  if (Object.keys(randomRecipe).length === 0 && randomRecipe.constructor === Object) {\n    content = '';\n  } else {\n    content += `<div>Your meal today is ${strMeal} from ${strCategory} category.</div><br>`;\n    content += `<div>Please, follow the instructions to cook ${strMeal}:</div><br>`;\n    content += `<div>${strInstructions}</div><br>`;\n    content += `${addLikeButton(strMeal)}`;\n  }\n\n  return `<div>${content}</div>`;\n}\n","import { allowedRecipes } from '../data/theMealDBApi';\n\nexport default function SearchByDish() {\n  const optionList = [];\n  allowedRecipes.forEach(el => optionList.push(`<option value=\"${el}\"></option>`));\n\n  return `\n    <input \n      type=\"search\" \n      id=\"search-recipe-input\" \n      list=\"recipe-list\" placeholder=\"Choose recipe\" \n      onchange=\"window.performSearch(this.value)\" \n      autocomplete=\"off\"\n    >\n    <datalist id=\"recipe-list\">\n    ${optionList}\n    </datalist>\n    <br><br>\n  `;\n}\n","import addLikeButton from './LikeButton';\n\nfunction getCurrentRecipeData() {\n  const { currentRecipe, recipeList } = window.dataStore;\n  return recipeList[currentRecipe];\n}\n\nexport default function renderRecipe() {\n  const { currentRecipe } = window.dataStore;\n  const recipeData = getCurrentRecipeData();\n  let content = '';\n\n  if (recipeData) {\n    const { strInstructions } = recipeData[0];\n\n    content += `<div><h3>${currentRecipe}</h3></div>`;\n    content += `<div>${strInstructions}</div><br>`;\n    content += `${addLikeButton(currentRecipe)}`;\n  }\n  return content ? `<div>${content}</div>` : '';\n}\n","function showLikedRecipesButton() {\n  let content = '';\n  content += `<button id=\"show-btn\" onclick=\"window.showList();\">Click to see your favorite recipes</button>`;\n  content += `<div>${ShowLikedRecipes()}</div>`;\n  return `<div>${content}</div>`;\n}\n\nfunction ShowLikedRecipes() {\n  let content = '';\n  window.dataStore.likedArr.forEach(el => (content += `<div>${el}</div>`));\n  return `\n    <div id=\"liked-title\" class=\"_hidden_7ad08\"><h3>List of your favorite recipes:</h3></div>\n    <div id=\"liked-list\" class=\"_hidden_7ad08\">${content}</div>`;\n}\n\nfunction showList() {\n  const elemArr = [document.querySelector('#liked-title'), document.querySelector('#liked-list')];\n  elemArr.map(el => {\n    el.style.display === 'block' ? (el.style.display = 'none') : (el.style.display = 'block');\n  });\n}\n\nexport { showLikedRecipesButton, ShowLikedRecipes, showList };\n","import renderRecipe from './Recipe';\nimport { showLikedRecipesButton } from './ShowLikedRecipes';\n\nexport default function RecipeResults() {\n  const { currentRecipe, isDataLoading, error } = window.dataStore;\n  let content = '';\n  if (currentRecipe === '') {\n    content = 'Please, choose the recipe from the list or try your luck and get random one :)';\n  } else {\n    if (isDataLoading) {\n      content = 'Loading ...';\n    }\n\n    if (error !== null) {\n      content = error;\n    }\n\n    // if (isCurrentRecipeDataLoaded()) {\n    content = `\n      ${renderRecipe()}\n      <br>\n      ${showLikedRecipesButton()}\n      `;\n    // }\n  }\n\n  return `<div>${content}</div>`;\n}\n","import RenderRandomBtn from './RandomButton';\nimport RenderRandomRecipe from './RandomRecipe';\nimport SearchByDish from './SearchByDish';\nimport RecipeResults from './RecipeResults';\n\nexport default function App() {\n  return `\n  <div>\n    ${RenderRandomBtn()}\n    <br>\n    ${RenderRandomRecipe()}\n    <br>\n    ${SearchByDish()}\n    <br>\n    ${RecipeResults()}\n  </div>\n  `;\n}\n","export default function addLikedRecipe(recipe) {\n  const { likedArr } = window.dataStore;\n  if (!likedArr.includes(recipe)) {\n    likedArr.push(recipe);\n  }\n}\n","import renderApp from './framework/render';\nimport performSearch from './data/recipesData';\nimport GetRandomRecipe from './data/randomRecipesData';\nimport dataStore from './data/dataStore';\nimport App from './components/App';\nimport { showList } from './components/ShowLikedRecipes';\nimport addLikedRecipe from './components/LikeRecipe';\n\nlet likedRecipe = [];\nwindow.GetRandomRecipe = GetRandomRecipe;\nwindow.likedRecipe = likedRecipe;\nwindow.renderApp = renderApp;\nwindow.showList = showList;\nwindow.performSearch = performSearch;\nwindow.addLikedRecipe = addLikedRecipe;\n\nrenderApp(App, 'app-root');\n"]}