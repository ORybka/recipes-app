{"version":3,"sources":["utils.js","framework/hooks.js","framework/element.js","framework/render.js","framework/index.js","components/RandomButton.js","components/RandomRecipe.js","components/RandomRecipeResults.js","components/SearchByDish.js","components/Recipe.js","components/RecipeResults.js","components/ShowLikedRecipes.js","data/theMealDBApi.js","data/randomRecipesData.js","data/recipesData.js","data/customHooks.js","components/App.js","index.js"],"names":["isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","undefined","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","createElement","element","DocumentFragment","document","Object","entries","name","value","startsWith","toLowerCase","substr","includes","removeAttribute","classList","split","filter","Boolean","add","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","RenderRandomBtn","setReload","renderRandomRecipe","recipe","strMeal","strCategory","strInstructions","RandomRecipeResults","randomRecipe","isDataLoading","addToLikedList","keys","constructor","SearchByDish","onChange","renderRecipe","recipeData","RecipeResults","currentRecipe","recipeList","showLikedRecipesButton","showList","ShowLikedRecipes","likedList","map","el","querySelector","style","display","getRecipe","recipeName","getRandomURL","GetRandomRecipe","url","response","fetch","results","json","Promise","resolve","dataStore","performSearch","recipeNameData","then","result","useRecipes","setError","setDataLoading","setRandomRecipe","setCurrentRecipe","setRecipeList","message","code","Error","meals","catch","finally","data","App","setLikedList","getElementById"],"mappings":"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","file":"src.052b3803.js","sourceRoot":"..\\src","sourcesContent":["export const isFunction = func => typeof func === 'function';\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nimport { createFunctionElement } from './hooks';\n\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n       Passing children as the 2nd argument is required as jsx transformer puts component functions\n       and regular tags in wrapper functions that expect children as the 2nd param\n      */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else if (name.toLowerCase() === 'classname') {\n            // We want to treat both strings and arrays in a similar manner\n            const classList = typeof value === 'string' ? value.split(' ').filter(Boolean) : value;\n            element.classList.add(...classList);\n          } else {\n            element.setAttribute(\n              name,\n              /** @type {string} */\n              value,\n            );\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","export * from './element';\nexport * from './hooks';\nexport * from './render';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\n\nexport default function RenderRandomBtn({ setReload }) {\n  return (\n    <>\n      <button id=\"random-recipe-btn\" onclick={() => setReload(true)}>\n        Click to get a recipe\n      </button>\n      <br />\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\n\nexport default function renderRandomRecipe(recipe) {\n  if (recipe) {\n    const { strMeal, strCategory, strInstructions } = recipe;\n    return (\n      <>\n        <div>\n          Your meal today is <strong>{strMeal}</strong> from {strCategory} category.\n        </div>\n        <br />\n        <div>Please, follow the instructions to cook {strMeal}:</div>\n        <br />\n        <div>{strInstructions}</div>\n        <br />\n      </>\n    );\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\nimport renderRandomRecipe from './RandomRecipe';\n\nexport default function RandomRecipeResults({\n  randomRecipe,\n  isDataLoading,\n  error,\n  addToLikedList,\n}) {\n  if (\n    randomRecipe === undefined ||\n    (Object.keys(randomRecipe).length === 0 && randomRecipe.constructor === Object)\n  ) {\n    return null;\n  } else {\n    if (isDataLoading) {\n      return <div>Loading ...</div>;\n    }\n\n    if (error !== null) {\n      return <div>Some error occured... 😩</div>;\n    }\n\n    return (\n      <>\n        <>{renderRandomRecipe(randomRecipe)} </>\n        <br />\n        <button onclick={e => addToLikedList(randomRecipe.strMeal)}>Click to like</button>\n        <br />\n      </>\n    );\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\n\nexport default function SearchByDish({ onChange }) {\n  return (\n    <>\n      <input\n        type=\"text\"\n        placeholder=\"Choose recipe\"\n        onChange={e => onChange(e.target.value.toLowerCase())}\n      />\n      <br />\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nexport default function renderRecipe(recipeData) {\n  const { strMeal, strInstructions, recipe } = recipeData;\n  return (\n    <div>\n      <h3>{strMeal}</h3>\n      <div>{strInstructions}</div>\n      <div>{recipe}</div>\n      <br />\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\nimport renderRecipe from './Recipe';\n\nexport default function RecipeResults({\n  currentRecipe,\n  recipeList,\n  isDataLoading,\n  error,\n  addToLikedList,\n}) {\n  if (currentRecipe === '') {\n    return <div>Please, choose the recipe from the list or try your luck and get random one</div>;\n  } else {\n    if (isDataLoading) {\n      return <div>Loading ...</div>;\n    }\n\n    if (error !== null) {\n      return <div>No such dish 😕</div>;\n    }\n\n    return (\n      <>\n        <>{renderRecipe(recipeList)} </>\n        <br />\n        <button onclick={e => addToLikedList(recipeList.strMeal)}>Click to like</button>\n        <br />\n      </>\n    );\n  }\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\nfunction showLikedRecipesButton() {\n  return (\n    <>\n      <button id=\"show-btn\" onclick={showList}>\n        Click to see your favorite recipes\n      </button>\n    </>\n  );\n}\n\nfunction ShowLikedRecipes({ likedList }) {\n  if (likedList) {\n    return (\n      <>\n        <div id=\"liked-title\" style=\"display: none\">\n          <h3>List of your favorite recipes:</h3>\n        </div>\n        <div id=\"liked-list\" style=\"display: none\">\n          {likedList.map(el => el + ', ')}\n        </div>\n      </>\n    );\n  }\n}\n\nfunction showList() {\n  const elemArr = [document.querySelector('#liked-title'), document.querySelector('#liked-list')];\n  elemArr.map(el => {\n    el.style.display === 'block' ? (el.style.display = 'none') : (el.style.display = 'block');\n  });\n}\n\nexport { showLikedRecipesButton, ShowLikedRecipes, showList };\n","function getRecipe(recipeName) {\n  return `https://www.themealdb.com/api/json/v1/1/search.php?s=${recipeName}`;\n}\nfunction getRandomURL() {\n  return 'https://www.themealdb.com/api/json/v1/1/random.php';\n}\n\nexport { getRecipe, getRandomURL };\n","import { getRandomURL } from './theMealDBApi';\n\nexport default async function GetRandomRecipe() {\n  const url = getRandomURL();\n  const response = await fetch(url);\n  const results = await response.json();\n  return Promise.resolve({ response, results });\n}\n","import { getRecipe } from './theMealDBApi';\nconst dataStore = {};\n\nexport default async function performSearch(recipeName) {\n  const recipeNameData = dataStore[recipeName];\n  if (recipeNameData) return recipeNameData;\n\n  const url = getRecipe(recipeName);\n  return fetch(url).then(response => {\n    const result = response.json();\n    dataStore[recipeName] = result;\n    return result;\n  });\n}\n","import { useState, useEffect } from '../framework';\nimport GetRandomRecipe from '../data/randomRecipesData';\nimport performSearch from '../data/recipesData';\n\nexport const useRecipes = () => {\n  const [error, setError] = useState(null);\n  const [isDataLoading, setDataLoading] = useState(false);\n  const [randomRecipe, setRandomRecipe] = useState({});\n  const [currentRecipe, setCurrentRecipe] = useState('');\n  const [recipeList, setRecipeList] = useState({});\n\n  useEffect(() => {\n    if (isDataLoading) {\n      GetRandomRecipe()\n        .then(({ response, results }) => {\n          const { message, code } = response;\n          if (code !== '200' && message) throw Error(message);\n          setError(null);\n          setRandomRecipe(results.meals[0]);\n        })\n        .catch(setError)\n        .finally(() => setDataLoading(false));\n    }\n  }, [isDataLoading]);\n\n  useEffect(() => {\n    if (currentRecipe) {\n      performSearch(currentRecipe)\n        .then(data => {\n          const { message, code } = data;\n          if (code !== '200' && message) throw Error(message);\n          setError(null);\n          setRecipeList(data.meals[0]);\n        })\n        .catch(setError)\n        .finally(() => setDataLoading(false));\n    }\n  }, [currentRecipe]);\n\n  return {\n    isDataLoading,\n    setDataLoading,\n    error,\n    randomRecipe,\n    currentRecipe,\n    setCurrentRecipe,\n    recipeList,\n  };\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState } from '../framework';\nimport RenderRandomBtn from './RandomButton';\nimport RandomRecipeResults from './RandomRecipeResults';\nimport SearchByDish from './SearchByDish';\nimport RecipeResults from './RecipeResults';\nimport { showLikedRecipesButton, ShowLikedRecipes } from './ShowLikedRecipes';\nimport { useRecipes } from '../data/customHooks';\n\nexport default function App() {\n  const {\n    isDataLoading,\n    setDataLoading,\n    error,\n    randomRecipe,\n    currentRecipe,\n    setCurrentRecipe,\n    recipeList,\n  } = useRecipes();\n  const [likedList, setLikedList] = useState([]);\n\n  const addToLikedList = recipe => {\n    if (!likedList.includes(recipe)) {\n      setLikedList([...likedList, recipe]);\n    }\n  };\n\n  return (\n    <>\n      <RenderRandomBtn randomRecipe={randomRecipe} setReload={setDataLoading} />\n      <RandomRecipeResults\n        randomRecipe={randomRecipe}\n        isDataLoading={isDataLoading}\n        error={error}\n        addToLikedList={addToLikedList}\n      />\n      <br />\n      <br />\n      <SearchByDish onChange={setCurrentRecipe} />\n      <br />\n      <RecipeResults\n        currentRecipe={currentRecipe}\n        recipeList={recipeList}\n        isDataLoading={isDataLoading}\n        error={error}\n        addToLikedList={addToLikedList}\n      />\n      <br />\n      <>{showLikedRecipesButton()}</>\n      <ShowLikedRecipes likedList={likedList} />\n    </>\n  );\n}\n","import { render } from './framework';\nimport App from './components/App';\n\nrender(App, document.getElementById('app-root'));\n"]}